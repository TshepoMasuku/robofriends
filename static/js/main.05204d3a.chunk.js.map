{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","searchfield","className","type","placeholder","onChange","Card","id","name","email","src","alt","CardList","robots","map","user","index","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","console","clear","document","getElementById"],"mappings":"2OAeeA,G,YAbG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAgC,EAAlBC,YAC/B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUL,QCKXM,EAZF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,GAAGC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MACpB,OACI,sBAAKP,UAAU,sDAAf,UACI,qBAAKQ,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,WACpD,gCACI,mCAAMH,EAAN,OACA,mCAAMC,EAAN,cCcDG,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAK,SAACC,EAAKC,GACd,OACI,cAAC,EAAD,CAEIT,GAAIM,EAAOG,GAAOT,GAClBC,KAAMK,EAAOG,GAAOR,KACpBC,MAAOI,EAAOG,GAAOP,OAHhBO,SCAlBC,EARA,SAACC,GACZ,OACK,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,QAAzC,SACIH,EAAMI,YCgBJC,E,kDAlBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CAAEC,UAAU,GAFV,E,8DAKDC,EAAMC,GACpBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAA4B,IAAxBG,KAAKJ,MAAMC,SACJ,+DAEAG,KAAKV,MAAMI,a,GAdHQ,IAAMC,WCyDlBC,E,kDAjDb,aAAe,IAAD,8BACZ,gBAiBFC,eAAiB,SAACC,GAChB,EAAKL,SAAU,CAAE5B,YAAaiC,EAAMC,OAAOC,SAjB3C,EAAKZ,MAAQ,CACXX,OAAQ,GACRZ,YAAa,IAJH,E,gEAQO,IAAD,OAClBoC,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEhB,OAAQ4B,S,+BAWhC,IAAD,EACwBb,KAAKJ,MAA5BX,EADD,EACCA,OAAOZ,EADR,EACQA,YACTyC,EAAiB7B,EAAO8B,QAAQ,SAACC,GACrC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS7C,MAG3C,OAAsB,IAAlBY,EAAOkC,OACF,oBAAI7C,UAAU,QAAd,0BAGL,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWF,aAAc4B,KAAKK,iBAC9B,uBAEA,eAAC,EAAD,WACE,uBACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpB,OAAQ6B,gB,GAzCdZ,IAAMC,WCGTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACGC,QAAQC,QACT,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.05204d3a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ( {searchChange, searchfield} ) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa2 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({ id,name,email }) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"></img>\r\n            <div>\r\n                <h2> {name} </h2>\r\n                <h3> {email} </h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map( (user,index) => {\r\n                    return(\r\n                        <Card \r\n                            key={index} \r\n                            id={robots[index].id} \r\n                            name={robots[index].name} \r\n                            email={robots[index].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n         <div style={{overflowY: 'scroll', height:'66vh'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({ hasError: true })\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.hasError === true) {\r\n            return <h1> Oooops... That is not good. </h1>\r\n        } else {\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport './App.css';\r\nimport 'tachyons';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n// This means the current directory './', and this means the previous directory '../'.\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then( response => response.json() )\r\n    .then( users => this.setState({ robots: users }) )\r\n  }\r\n\r\n  // onSearchChange = () => {\r\n  //   const input = document.querySelector('input');\r\n  //   this.setState( { searchfield: input.value } )\r\n  // }\r\n  onSearchChange = (event) => {\r\n    this.setState( { searchfield: event.target.value } )\r\n  }\r\n\r\n  render() {\r\n    const { robots,searchfield } = this.state;\r\n    const filteredRobots = robots.filter( (robot) => {\r\n      return(robot.name.toLowerCase().includes(searchfield))\r\n    });\r\n\r\n    if (robots.length === 0) {\r\n      return <h1 className='f1 tc'> LOADING... </h1>\r\n    } else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1'>ROBOFRIENDS</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <br></br>\r\n          {/* <hr></hr> */}\r\n          <Scroll>\r\n            <br></br>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots}/>\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n      }\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {console.clear()}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}